{"version":3,"file":"ais-base-widget.js","sources":["../../src/components/ais-base-widget.gjs"],"sourcesContent":["import { template } from \"@ember/template-compiler\";\nimport Component from '@glimmer/component';\nimport { action } from '@ember/object';\nimport didInsert from '@ember/render-modifiers/modifiers/did-insert';\nimport { tracked } from '@glimmer/tracking';\nexport default class AisBaseWidget extends Component {\n    @tracked\n    element = null;\n    // Props specific to the derived class\n    // See API docs for more information on available props for each widget:\n    // https://www.algolia.com/doc/api-reference/widgets/js/\n    @tracked\n    requiredProps = {};\n    @tracked\n    optionalProps = {};\n    @tracked\n    props = {\n        ...this.requiredProps,\n        ...this.optionalProps\n    };\n    checkRequiredProps() {\n        if (this.requiredProps) {\n            Object.keys(this.requiredProps).forEach((prop1)=>{\n                if (!this.args[prop1] && prop1 !== 'container') {\n                    throw new Error(`Required prop ${prop1} is missing from ${this.constructor.name}`);\n                }\n            });\n        }\n    }\n    @action\n    createWidget(element1) {\n        this.element = element1;\n        this.checkRequiredProps();\n        this.args.searchInstance.addWidgets([\n            this.createAlgoliaWidget(element1)\n        ]);\n        if (!this.args.searchInstance?.started) {\n            this.args.searchInstance.start();\n        }\n    }\n    createAlgoliaWidget() {\n        throw new Error('createAlgoliaWidget must be implemented in derived classes');\n    }\n    // Basic template that can be overridden in derived classes\n    static{\n        template(`\n    <div {{didInsert this.createWidget}} class={{@rootClass}}></div>\n  `, {\n            component: this,\n            eval () {\n                return eval(arguments[0]);\n            }\n        });\n    }\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL3J1bm5lci93b3JrL2VtYmVyLWluc3RhbnRzZWFyY2gvZW1iZXItaW5zdGFudHNlYXJjaC9lbWJlci1pbnN0YW50c2VhcmNoL3NyYy9jb21wb25lbnRzL2Fpcy1iYXNlLXdpZGdldC5nanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IENvbXBvbmVudCBmcm9tICdAZ2xpbW1lci9jb21wb25lbnQnO1xuaW1wb3J0IHsgYWN0aW9uIH0gZnJvbSAnQGVtYmVyL29iamVjdCc7XG5pbXBvcnQgZGlkSW5zZXJ0IGZyb20gJ0BlbWJlci9yZW5kZXItbW9kaWZpZXJzL21vZGlmaWVycy9kaWQtaW5zZXJ0JztcbmltcG9ydCB7IHRyYWNrZWQgfSBmcm9tICdAZ2xpbW1lci90cmFja2luZyc7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFpc0Jhc2VXaWRnZXQgZXh0ZW5kcyBDb21wb25lbnQge1xuICBAdHJhY2tlZCBlbGVtZW50ID0gbnVsbDtcbiAgLy8gUHJvcHMgc3BlY2lmaWMgdG8gdGhlIGRlcml2ZWQgY2xhc3NcbiAgLy8gU2VlIEFQSSBkb2NzIGZvciBtb3JlIGluZm9ybWF0aW9uIG9uIGF2YWlsYWJsZSBwcm9wcyBmb3IgZWFjaCB3aWRnZXQ6XG4gIC8vIGh0dHBzOi8vd3d3LmFsZ29saWEuY29tL2RvYy9hcGktcmVmZXJlbmNlL3dpZGdldHMvanMvXG4gIEB0cmFja2VkIHJlcXVpcmVkUHJvcHMgPSB7fTsgLy8gQWRkZWQgYnkgZGVyaXZlZCBjb21wb25lbnRzXG4gIEB0cmFja2VkIG9wdGlvbmFsUHJvcHMgPSB7fTsgLy8gQWRkZWQgYnkgZGVyaXZlZCBjb21wb25lbnRzXG4gIEB0cmFja2VkIHByb3BzID0ge1xuICAgIC4uLnRoaXMucmVxdWlyZWRQcm9wcyxcbiAgICAuLi50aGlzLm9wdGlvbmFsUHJvcHMsXG4gIH07XG5cbiAgY2hlY2tSZXF1aXJlZFByb3BzKCkge1xuICAgIGlmICh0aGlzLnJlcXVpcmVkUHJvcHMpIHtcbiAgICAgIE9iamVjdC5rZXlzKHRoaXMucmVxdWlyZWRQcm9wcykuZm9yRWFjaCgocHJvcCkgPT4ge1xuICAgICAgICBpZiAoIXRoaXMuYXJnc1twcm9wXSAmJiBwcm9wICE9PSAnY29udGFpbmVyJykge1xuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgICAgIGBSZXF1aXJlZCBwcm9wICR7cHJvcH0gaXMgbWlzc2luZyBmcm9tICR7dGhpcy5jb25zdHJ1Y3Rvci5uYW1lfWAsXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9XG5cbiAgQGFjdGlvblxuICBjcmVhdGVXaWRnZXQoZWxlbWVudCkge1xuICAgIHRoaXMuZWxlbWVudCA9IGVsZW1lbnQ7XG5cbiAgICB0aGlzLmNoZWNrUmVxdWlyZWRQcm9wcygpO1xuXG4gICAgdGhpcy5hcmdzLnNlYXJjaEluc3RhbmNlLmFkZFdpZGdldHMoW3RoaXMuY3JlYXRlQWxnb2xpYVdpZGdldChlbGVtZW50KV0pO1xuXG4gICAgaWYgKCF0aGlzLmFyZ3Muc2VhcmNoSW5zdGFuY2U_LnN0YXJ0ZWQpIHtcbiAgICAgIHRoaXMuYXJncy5zZWFyY2hJbnN0YW5jZS5zdGFydCgpO1xuICAgIH1cbiAgfVxuXG4gIGNyZWF0ZUFsZ29saWFXaWRnZXQoKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgJ2NyZWF0ZUFsZ29saWFXaWRnZXQgbXVzdCBiZSBpbXBsZW1lbnRlZCBpbiBkZXJpdmVkIGNsYXNzZXMnLFxuICAgICk7XG4gIH1cblxuICAvLyBCYXNpYyB0ZW1wbGF0ZSB0aGF0IGNhbiBiZSBvdmVycmlkZGVuIGluIGRlcml2ZWQgY2xhc3Nlc1xuICA8dGVtcGxhdGU-XG4gICAgPGRpdiB7e2RpZEluc2VydCB0aGlzLmNyZWF0ZVdpZGdldH19IGNsYXNzPXt7QHJvb3RDbGFzc319PjwvZGl2PlxuICA8L3RlbXBsYXRlPlxufVxuIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLGVBQWUscUJBQXFCO0FBQzNDLFNBQVMsTUFBTSxRQUFRLGdCQUFnQjtBQUN2QyxPQUFPLGVBQWUsK0NBQStDO0FBQ3JFLFNBQVMsT0FBTyxRQUFRLG9CQUFvQjtBQUU1QyxlQUFlLE1BQU0sc0JBQXNCO0lBQ3pDLENBQUM7SUFBUSxVQUFVLEtBQUs7SUFDeEIsc0NBQXNDO0lBQ3RDLHdFQUF3RTtJQUN4RSx3REFBd0Q7SUFDeEQsQ0FBQztJQUFRLGdCQUFnQixDQUFDLEVBQUU7SUFDNUIsQ0FBQztJQUFRLGdCQUFnQixDQUFDLEVBQUU7SUFDNUIsQ0FBQztJQUFRLFFBQVE7UUFDZixHQUFHLElBQUksQ0FBQyxhQUFhO1FBQ3JCLEdBQUcsSUFBSSxDQUFDLGFBQWE7SUFDdkIsRUFBRTtJQUVGLHFCQUFxQjtRQUNuQixJQUFJLElBQUksQ0FBQyxhQUFhLEVBQUU7WUFDdEIsT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxPQUFPLENBQUMsQ0FBQztnQkFDdkMsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBSyxJQUFJLFVBQVMsYUFBYTtvQkFDNUMsTUFBTSxJQUFJLE1BQ1IsQ0FBQyxjQUFjLEVBQUUsTUFBSyxpQkFBaUIsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxDQUFDO2dCQUVwRTtZQUNGO1FBQ0Y7SUFDRjtJQUVBLENBQUM7SUFDRCxhQUFhLFFBQU8sRUFBRTtRQUNwQixJQUFJLENBQUMsT0FBTyxHQUFHO1FBRWYsSUFBSSxDQUFDLGtCQUFrQjtRQUV2QixJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxVQUFVLENBQUM7WUFBQyxJQUFJLENBQUMsbUJBQW1CLENBQUM7U0FBUztRQUV2RSxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEVBQUUsU0FBUztZQUN0QyxJQUFJLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxLQUFLO1FBQ2hDO0lBQ0Y7SUFFQSxzQkFBc0I7UUFDcEIsTUFBTSxJQUFJLE1BQ1I7SUFFSjtJQUVBLDJEQUEyRDtJQUMzRCxNQUFBO1FBQUEsU0FBVSxDQUFBOztFQUVWLENBQUEsRUFBQTtZQUFBLFdBQUEsSUFBVztZQUFYO2dCQUFBLE9BQUEsS0FBQSxTQUFBLENBQUEsRUFBVztZQUFEO1FBQUE7SUFBQSxDQUZBO0FBR1oifQ"],"names":["AisBaseWidget","Component","g","this","prototype","tracked","i","void 0","requiredProps","optionalProps","checkRequiredProps","Object","keys","forEach","prop1","args","Error","constructor","name","createWidget","element1","element","searchInstance","addWidgets","createAlgoliaWidget","started","start","n","action","setComponentTemplate","precompileTemplate","strictMode","scope","didInsert"],"mappings":";;;;;;;;AAKe,MAAMA,aAAA,SAAsBC,SAAA,CAAA;AAAA,EAAA;AAAAC,IAAAA,CAAA,CAAAC,IAAA,CAAAC,SAAA,cACxCC,OAAA,CAAA,EAAA,YAAA;MAAA,OAAkB,IAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAAA,QAAA,IAAAC,CAAA,CAAAH,IAAA,cAAAI,KAAA,CAAA,EAAA;AAAA,EAAA;AAAAL,IAAAA,CAAA,CAAAC,IAAA,CAAAC,SAAA,oBAIlBC,OAAA,CAAA,EAAA,YAAA;AAAA,MAAA,OAAwB,EAAC,CAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAAA,cAAA,IAAAC,CAAA,CAAAH,IAAA,EAAA,eAAA,CAAA,EAAAI,MAAA,EAH1B;AACA;AACA;AAAA,EAAA;AAAAL,IAAAA,CAAA,CAAAC,IAAA,CAAAC,SAAA,oBAECC,OAAA,CAAA,EAAA,YAAA;AAAA,MAAA,OAAwB,EAAC,CAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAAA,cAAA,IAAAC,CAAA,CAAAH,IAAA,oBAAAI,KAAA,CAAA,EAAA;AAAA,EAAA;AAAAL,IAAAA,CAAA,CAAAC,IAAA,CAAAC,SAAA,YACzBC,OAAA,CAAA,EAAA,YAAA;MAAA,OAAgB;QACf,GAAG,IAAI,CAACG,aAAa;AACrB,QAAA,GAAG,IAAI,CAACC,aAAAA;AACV,OAAA,CAAA;AAAA,KAAA,CAAA,CAAA;AAAA,GAAA;AAAA,EAAA,MAAA,IAAAH,CAAA,CAAAH,IAAA,YAAAI,KAAA,CAAA,EAAA;AAEAG,EAAAA,kBAAAA,GAAqB;IACnB,IAAI,IAAI,CAACF,aAAa,EAAE;MACtBG,MAAA,CAAOC,IAAI,CAAC,IAAI,CAACJ,aAAa,CAAA,CAAEK,OAAO,CAAEC,KAAA,IAAA;QACvC,IAAI,CAAC,IAAI,CAACC,IAAI,CAACD,KAAA,CAAK,IAAIA,KAAA,KAAS,WAAa,EAAA;UAC5C,MAAM,IAAIE,KAAA,CACP,CAAgBF,cAAAA,EAAAA,KAAK,CAAmB,iBAAA,EAAA,IAAI,CAACG,WAAW,CAACC,IAAK,CAAC,CAAA,CAAA,CAAA;AAEpE,SAAA;AACF,OAAA,CAAA,CAAA;AACF,KAAA;AACF,GAAA;AAGAC,EAAAA,YAAAA,CAAaC,QAAO,EAAE;IACpB,IAAI,CAACC,OAAO,GAAGD,QAAA,CAAA;AAEf,IAAA,IAAI,CAACV,kBAAkB,EAAA,CAAA;AAEvB,IAAA,IAAI,CAACK,IAAI,CAACO,cAAc,CAACC,UAAU,CAAC,CAAC,IAAI,CAACC,mBAAmB,CAACJ,QAAA,CAAS,CAAA,CAAA,CAAA;IAEvE,IAAI,CAAC,IAAI,CAACL,IAAI,CAACO,cAAc,EAAEG,OAAA,EAAS;AACtC,MAAA,IAAI,CAACV,IAAI,CAACO,cAAc,CAACI,KAAK,EAAA,CAAA;AAChC,KAAA;AACF,GAAA;AAAA,EAAA;AAAAC,IAAAA,CAAA,CAAAxB,IAAA,CAAAC,SAAA,mBAXCwB,MAAA,CAAA,CAAA,CAAA;AAAA,GAAA;AAaDJ,EAAAA,mBAAAA,GAAsB;IACpB,MAAM,IAAIR,KAAA,CACR,4DAAA,CAAA,CAAA;AAEJ,GAAA;AAEA;AACA,EAAA;IAAAa,oBAAA,CAAAC,kBAAA,CAEA,4EAAA,EAAA;MAAAC,UAAA,EAAA,IAAA;AAAAC,MAAAA,KAAA,EAAAA,OAAA;AAAAC,QAAAA,SAAAA;AAAA,OAAA,CAAA;AAAU,KAAA,CAAA,EAAV,IAAW,CAAA,CAAA;AAAD,GAAA;AACZ;;;;"}